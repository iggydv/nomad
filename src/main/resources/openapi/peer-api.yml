openapi: 3.0.3

info:
  description: "Nomad Storage operations for peers"
  version: "1.0.0"
  title: Nomad API
  contact:
    email: iggydv12@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

paths:
  /storage/put:
    post:
      summary: add an object to group/overlay storage
      operationId: putObject
      responses:
        '200':
          description: object stored successfully
        '400':
          description: invalid input, object invalid
        '409':
          description: an identical object already exists
        '500':
          description: server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameObject'
        description: game Object to add

  /storage/get/{objectId}:
    get:
      summary: retrieve an object from group/overlay storage
      operationId: getObject
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of object to _retrieve_.
          schema:
            type: string
            format: string
            example: 111
      responses:
        '200':
          description: retrieve successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameObject'
        '400':
          description: invalid input, object invalid
        '404':
          description: object does not exist
        '500':
          description: server error

  /storage/update:
    post:
      summary: update an object if it exists, otherwise add it to group/overlay storage
      operationId: updateObject
      responses:
        '200':
          description: object _modified_ successfully
        '400':
          description: invalid input, object invalid
        '404':
          description: object does not exist
        '500':
          description: server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameObject'
        description: object to update

  /storage/delete/{objectId}:
    delete:
      summary: delete an object from group/overlay storage
      operationId: deleteObject
      parameters:
        - name: objectId
          in: path
          required: true
          description: Object ID of object to _delete_
          schema:
            type: string
            format: string
            example: 111
      responses:
        '200':
          description: object _deleted_ successfully
        '400':
          description: invalid input, object invalid
        '500':
          description: server error

  /storage/get/peer-ledger:
    get:
      summary: retrieve complete peer-ledger
      operationId: getPeerLedger
      responses:
        '200':
          description: retrieve successful
          content:
            application/json:
              schema:
                type: string
        '400':
          description: invalid input, object invalid
        '404':
          description: ledger does not exist
        '500':
          description: server error

  /storage/get/object-ledger:
    get:
      summary: retrieve complete object-ledger
      operationId: getObjectLedger
      responses:
        '200':
          description: retrieve successful
          content:
            application/json:
              schema:
                type: string
        '400':
          description: invalid input, object invalid
        '404':
          description: ledger does not exist
        '500':
          description: server error

  /overlay-storage/put:
    post:
      summary: add an object to overlay storage
      operationId: putOverlayObject
      responses:
        '200':
          description: object stored successfully
        '400':
          description: invalid input, object invalid
        '409':
          description: an identical object already exists
        '500':
          description: server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameObject'
        description: game Object to add

  /overlay-storage/get/{objectId}:
    get:
      summary: retrieve an object from overlay storage
      operationId: getOverlayObject
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of object to _retrieve_.
          schema:
            type: string
            format: string
            example: 111
      responses:
        '200':
          description: retrieve successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameObject'
        '400':
          description: invalid input, object invalid
        '404':
          description: object does not exist
        '500':
          description: server error

  /group-storage/fast-put:
    post:
      summary: add an object to group storage (fast mode)
      operationId: putGroupObjectFast
      responses:
        '200':
          description: object stored successfully
        '400':
          description: invalid input, object invalid
        '409':
          description: an identical object already exists
        '500':
          description: server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameObject'
        description: game Object to add

  /group-storage/safe-put:
    post:
      summary: add an object to group storage (safe mode)
      operationId: putGroupObjectSafe
      responses:
        '200':
          description: object stored successfully
        '400':
          description: invalid input, object invalid
        '409':
          description: an identical object already exists
        '500':
          description: server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameObject'
        description: game Object to add

  /group-storage/fast-get/{objectId}:
    get:
      summary: retrieve an object from group storage (fast mode)
      operationId: getGroupObjectFast
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of object to _retrieve_.
          schema:
            type: string
            format: string
            example: 111
      responses:
        '200':
          description: retrieve successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameObject'
        '400':
          description: invalid input, object invalid
        '404':
          description: object does not exist
        '500':
          description: server error

  /group-storage/parallel-get/{objectId}:
    get:
      summary: retrieve an object from group storage (parallel mode)
      operationId: getGroupObjectParallel
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of object to _retrieve_.
          schema:
            type: string
            format: string
            example: 111
      responses:
        '200':
          description: retrieve successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameObject'
        '400':
          description: invalid input, object invalid
        '404':
          description: object does not exist
        '500':
          description: server error

  /group-storage/safe-get/{objectId}:
    get:
      summary: retrieve an object from group storage (safe mode)
      operationId: getGroupObjectSafe
      parameters:
        - name: objectId
          in: path
          required: true
          description: object ID of object to _retrieve_.
          schema:
            type: string
            format: string
            example: 111
      responses:
        '200':
          description: retrieve successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameObject'
        '400':
          description: invalid input, object invalid
        '404':
          description: object does not exist
        '500':
          description: server error

  /config/storage:
    post:
      summary: set storage mode
      operationId: setStorageMode
      parameters:
        - name: storageMode
          in: query
          required: true
          description: Storage mode used for _put_.
          schema:
            $ref: '#/components/schemas/StorageMode'
      responses:
        '200':
          description: retrieve successful
        '400':
          description: invalid input, object invalid
        '500':
          description: server error

  /config/retrieval:
    post:
      summary: set retrieve mode
      operationId: setRetrievalMode
      parameters:
        - name: retrievalMode
          in: query
          required: true
          description: Storage mode used for _get_.
          schema:
            $ref: '#/components/schemas/RetrievalMode'
      responses:
        '200':
          description: retrieve successful
        '400':
          description: invalid input, object invalid
        '500':
          description: server error

  /config/groups/migration:
    post:
      summary: Enable/disable group migration for this peer
      operationId: migrationEnable
      parameters:
        - name: enabled
          in: query
          required: true
          description: true = enable, false = disable
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: retrieve successful
        '400':
          description: invalid input, object invalid
        '500':
          description: server error

  /config/groups/testing/malicious-peer:
    post:
      summary: Enable/disable group migration for this peer
      operationId: maliciousPeerEnable
      parameters:
        - name: enabled
          in: query
          required: true
          description: true = enable, false = disable
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: retrieve successful
        '400':
          description: invalid input, object invalid
        '500':
          description: server error

  /config/groups/replication-factor:
    post:
      summary: Update replication factor for this peer
      operationId: updateReplicationFactor
      parameters:
        - name: rf
          in: query
          required: true
          description: set replication factor
          schema:
            type: number
            example: 3
      responses:
        '200':
          description: update RF successful
        '400':
          description: invalid input, object invalid
        '500':
          description: server error

components:
  schemas:
    StorageMode:
      type: string
      enum:
        - FAST
        - SAFE
    RetrievalMode:
      type: string
      enum:
        - FAST
        - SAFE
        - PARALLEL

    GameObject:
      type: object
      required:
        - id
        - creationTime
        - ttl
        - value
      properties:
        id:
          type: string
          minLength: 1
          example: 111
        creationTime:
          description: Creation time in seconds (unix time)
          type: integer
          format: int64
          minimum: 1
          example: 1897744637
        lastModified:
          description: Creation time in seconds (unix time)
          type: integer
          format: int64
          default: 0
          example: 1897744637
        ttl:
          description: Time-to-live in seconds (unix time)
          type: integer
          format: int64
          minimum: 1
          example: 604800
        value:
          description: Base64 encoded data
          type: string
          format: byte
          example: ""